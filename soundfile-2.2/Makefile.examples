## soundfile example programs makefile for linux.
##
## Programmer:    Craig Stuart Sapp <craig@ccrma.stanford.edu>
## Creation Date: Sun Feb  3 10:36:59 PST 2002
## Last Modified: Sun Aug 29 04:04:15 PDT 2004
## Filename:      ...soundfile/Makefile.examples
##
## Description: This Makefile creates example programs which use the sig
##		library for linux using gcc 2.7.2 or higher; and Apple 
##              OSX 10.2 or higher.  The source code and examples will
##              also compile in Visual C++ 5.0 and higher.
##
## To run this makefile, type (without quotes) "make -f Makefile.examples"
##
## Without arguments, the makefile will compile all example programs.
## If you give a program name as an argument, it will compile 
## just that program. E.g.: "make -f Makefile.examples writetest"
## will compile the writetest program and place it in the ./bin directory.
## You have to reate the library file before running this makefile.
##

# Use LINUX  for linux computers
# Use VISUAL for Windows computers
# Use SUN    for Sun computers
# Use OSX    for Apple OS X computers
OSTYPE = LINUX

SRCDIR    = examples
INCDIR    = include
LIBDIR    = lib
TARGDIR   = bin

COMPILER     = g++
DEFINES      = $(addprefix -D,$(OSTYPE))
PREFLAGS    := -Wall -g -O6 -I$(INCDIR) $(DEFINES)

# Uncomment the following line for static linking (more portable executable)
# PREFLAGS += -static
    
POSTFLAGS := -L$(LIBDIR) -lsoundfile 

#                                                                         #
# End of user-modifiable variables.                                       #
#                                                                         #
###########################################################################

# setting up the directory paths to search for program source code
vpath %.cpp   $(SRCDIR)

# generating a list of the programs to compile with "make all"

##### sig example programs:

PROGS = $(notdir $(patsubst \
         %.cpp,%,$(wildcard $(SRCDIR)/*.cpp)))

# targets which don't actually refer to files
.PHONY : all bin makebindir runloop fullrange runtest


###########################################################################
#                                                                         #
#                                                                         #

all : makebindir $(addprefix $(TARGDIR)/,$(notdir $(PROGS))) 
	@echo Finished compiling example programs for all categories.

# test the basic reading/writing of soundfile.
runtest: writetest readtest
	rm -f $(TARGDIR)/z.wav
	$(TARGDIR)/writetest -d -n 10 -s -5 $(TARGDIR)/z.wav
	$(TARGDIR)/readtest $(TARGDIR)/z.wav
	rm -f $(TARGDIR)/z.wav

# test the looping feature of the SoundFileRead class.
runloop: writetest looptest
	rm -f $(TARGDIR)/z.wav
	$(TARGDIR)/writetest -n 100 -s 0 $(TARGDIR)/z.wav
	$(TARGDIR)/looptest $(TARGDIR)/z.wav
	rm -f $(TARGDIR)/z.wav

# make a soundfile which has all possible 16-bit amplitude levels.
fullrange: writetest
	-rm -f $(TARGDIR)/fullrange.wav
	$(TARGDIR)/writetest -n 65536 -s -32768 $(TARGDIR)/fullrange.wav

makebindir :
#	@echo Programs: $(sort $(notdir $(PROGS)))
	-mkdir $(TARGDIR)

# defining an explicit rule for program sourcefile dependencies
$(TARGDIR)/% : $(notdir %.cpp)
	$(COMPILER) $(PREFLAGS) -o $@ $< $(POSTFLAGS) \
	    && strip $@

% : $(notdir %.cpp)
	$(COMPILER) $(PREFLAGS) -o $(TARGDIR)/$@ $< $(POSTFLAGS) \
	    && strip $(TARGDIR)/$@

#                                                                         #
#                                                                         #
###########################################################################


